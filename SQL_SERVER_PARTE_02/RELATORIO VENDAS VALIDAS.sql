-- CRIANDO UM RELATÓRIO DE VENDAS VÁLIDAS PASSO A PASSO:

-- SERÃO UTILIZADAS AS 3 TABELAS:

SELECT * FROM [TABELA DE CLIENTES]
SELECT * FROM [ITENS NOTAS FISCAIS]
SELECT * FROM [NOTAS FISCAIS]

-- VAMOS JUNTAR [NOTAS FISCAIS] E [ITENS NOTAS FISCAIS] PELO CAMPO EM COMUM: [NUMERO]

SELECT * FROM [NOTAS FISCAIS] NF
INNER JOIN [ITENS NOTAS FISCAIS] INF 
ON NF.NUMERO = INF.NUMERO

-- QUEREMOS QUE SEJAM APRESENTADAS APENAS AS COLUNAS DA [NOTAS FISCAIS]: CPF, DATA
-- E DA [ITENS NOTAS FISCAIS]: QUANTIDADE

SELECT NF.CPF, NF.[DATA], INF.QUANTIDADE FROM [NOTAS FISCAIS] NF
INNER JOIN [ITENS NOTAS FISCAIS] INF 
ON NF.NUMERO = INF.NUMERO

-- IREMOS CONVERTER A DATA DO TIPO DATE PARA VARCHAR COM ESTILO DE EXIBIÇÃO 120

SELECT NF.CPF, CONVERT(VARCHAR,NF.[DATA], 120) AS DATA_CONVERTIDA, 
INF.QUANTIDADE AS QUANTIDADE_MES FROM [NOTAS FISCAIS] NF
INNER JOIN [ITENS NOTAS FISCAIS] INF 
ON NF.NUMERO = INF.NUMERO

-- VAMOS PEGAR A DATA_CONVERTIDA E CAPTURAR APENAS ANO E MÊS USANDO SUBSTRING

SELECT NF.CPF, SUBSTRING(CONVERT(VARCHAR,NF.[DATA], 120), 1,7) AS ANO_MES, 
INF.QUANTIDADE FROM [NOTAS FISCAIS] NF
INNER JOIN [ITENS NOTAS FISCAIS] INF 
ON NF.NUMERO = INF.NUMERO

-- AGORA SERÃO SOMADAS AS QUANTIDADES DO MES COM A FUNÇÃO DE AGREGAÇÃO SUM. 
--(LEMBRAR DE UTILIZAR GROUP BY)

SELECT NF.CPF, SUBSTRING(CONVERT(VARCHAR,NF.[DATA], 120), 1,7) AS ANO_MES, 
SUM(INF.QUANTIDADE) AS QUANTIDADE_MES FROM [NOTAS FISCAIS] NF
INNER JOIN [ITENS NOTAS FISCAIS] INF 
ON NF.NUMERO = INF.NUMERO
GROUP BY NF.CPF, SUBSTRING(CONVERT(VARCHAR,NF.[DATA], 120), 1,7)

-- QUEREMOS TRAZER DA [TABELA DE CLIENTES] O NOME E [VOLUME DE COMPRA]. 
-- PARA ISSO CRIAMOS A SUBQUERY:

SELECT TC.NOME, TC.[VOLUME DE COMPRA] FROM [TABELA DE CLIENTES] AS TC

-- ENVOLVEMOS A PRIMEIRA CONSULTA COM PARENTESES E DAMOS ALIAS DE CQ (consulta quantidade)
-- E FAZER INNER JOIN COM A CONSULTA TC

SELECT TC.NOME, CQ.ANO_MES, CQ.QUANTIDADE_MES, TC.[VOLUME DE COMPRA]
FROM
	(SELECT NF.CPF, SUBSTRING(CONVERT(VARCHAR,NF.[DATA], 120), 1,7) AS ANO_MES, 
	SUM(INF.QUANTIDADE) AS QUANTIDADE_MES FROM [NOTAS FISCAIS] NF
	INNER JOIN [ITENS NOTAS FISCAIS] INF 
	ON NF.NUMERO = INF.NUMERO
	GROUP BY NF.CPF, SUBSTRING(CONVERT(VARCHAR,NF.[DATA], 120), 1,7)) AS CQ
INNER JOIN [TABELA DE CLIENTES] AS TC ON TC.CPF = CQ.CPF

-- VAMOS TRANSFORMAR ESSA CONSULTA EM OUTRA SUBQUERY E CHAMAR DE AUX1
-- CASO A QUANTIDADE DE COMPRAS FEITAS POR MES SEJA MAIOR 
-- QUE O O VOLUME DE COMPRAS DO CLIENTE, A COMPRA SERÁ INVÁLIDA

SELECT AUX1.NOME, AUX1.ANO_MES, AUX1.QUANTIDADE_MES,
	CASE WHEN AUX1.QUANTIDADE_MES <= AUX1.[VOLUME DE COMPRA] THEN 'VENDA VÁLIDA'
	WHEN AUX1.QUANTIDADE_MES > AUX1.[VOLUME DE COMPRA] THEN 'VENDA INVÁLIDA'
	END AS STATUS_VENDA
FROM
(SELECT TC.NOME, CQ.ANO_MES, CQ.QUANTIDADE_MES, TC.[VOLUME DE COMPRA]
FROM
	(SELECT NF.CPF, SUBSTRING(CONVERT(VARCHAR,NF.[DATA], 120), 1,7) AS ANO_MES, 
	SUM(INF.QUANTIDADE) AS QUANTIDADE_MES FROM [NOTAS FISCAIS] NF
	INNER JOIN [ITENS NOTAS FISCAIS] INF 
	ON NF.NUMERO = INF.NUMERO
	GROUP BY NF.CPF, SUBSTRING(CONVERT(VARCHAR,NF.[DATA], 120), 1,7)) AS CQ
INNER JOIN [TABELA DE CLIENTES] AS TC ON TC.CPF = CQ.CPF) AS AUX1
ORDER BY AUX1.NOME, AUX1.ANO_MES

-- ENTÃO IREMOS MOSTRAR APENAS AS VENDAS INVÁLIDAS E CALCULAR A DIFERENÇA 
-- ENTRE O LIMITE DE VENDA MAXIMO E O REALIZADO EM PERCENTUAIS

SELECT AUX1.NOME, AUX1.ANO_MES, AUX1.[VOLUME DE COMPRA], AUX1.QUANTIDADE_MES, 
CONVERT(DECIMAL(15,2), ( (AUX1.QUANTIDADE_MES/AUX1.[VOLUME DE COMPRA]) - 1) * 100)  AS VARIACAO, 
CASE WHEN AUX1.QUANTIDADE_MES <= AUX1.[VOLUME DE COMPRA] THEN 'VENDA VÁLIDA'
WHEN AUX1.QUANTIDADE_MES > AUX1.[VOLUME DE COMPRA] THEN 'VENDA INVÁLIDA'
END AS STATUS_VENDA
FROM 
(SELECT TC.NOME, CQ.ANO_MES, CQ.QUANTIDADE_MES, TC.[VOLUME DE COMPRA]
FROM
(SELECT NF.CPF, SUBSTRING(CONVERT(VARCHAR, NF.[DATA], 120),1,7) AS ANO_MES, 
SUM(INF.QUANTIDADE) AS QUANTIDADE_MES  FROM [NOTAS FISCAIS] NF
INNER JOIN [ITENS NOTAS FISCAIS] INF
ON NF.NUMERO = INF.NUMERO 
GROUP BY NF.CPF, SUBSTRING(CONVERT(VARCHAR, NF.[DATA], 120),1,7)) CQ
INNER JOIN [TABELA DE CLIENTES] TC ON TC.CPF = CQ.CPF) AUX1
WHERE  AUX1.QUANTIDADE_MES > AUX1.[VOLUME DE COMPRA] 
ORDER BY AUX1.NOME, AUX1.ANO_MES


